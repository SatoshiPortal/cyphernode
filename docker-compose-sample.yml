version: "3"

services:

  ##########################
  # POSTGRESQL             #
  ##########################

  postgres:
    image: postgres:14.0-bullseye
    user: $USER
    entrypoint: sh -c 'rm -f /container_monitor/postgres_ready ; exec docker-entrypoint.sh -c logging_collector=true -c log_directory=/cnlogs/'
    env_file:
      - .env/postgres.env
    volumes:
      - "cn-dir/dist/cyphernode/postgres:/var/lib/postgresql/data"
      - "cn-dir/dist/cyphernode/logs:/cnlogs"
      - container_monitor:/container_monitor
    healthcheck:
      test: sh -c 'psql -U cyphernode -c "select 1;" && touch /container_monitor/postgres_ready && chown $USER /container_monitor/postgres_ready || rm -f /container_monitor/postgres_ready'
      interval: 30s
      timeout: 10s
      retries: 10
    stop_grace_period: 90s
    networks:
      - cyphernodenet
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    

  
  ##########################
  # TOR                    #
  ##########################

  tor:
    image: cyphernode/tor:v0.9.0-dev-local
    # Sleeping 10 seconds to let lightning and traefik start
    command: $USER sh -c 'rm -f /container_monitor/tor_ready ; sleep 10 ; export HOME=/tor ; exec tor -f /tor/torrc'
    volumes:
      - "cn-dir/dist/cyphernode/tor:/tor"
      - container_monitor:/container_monitor
    healthcheck:
      test: chown -R $USER /container_monitor && su-exec $USER sh -c 'tor-resolve torproject.org && touch /container_monitor/tor_ready || rm -f /container_monitor/tor_ready'
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - cyphernodenet
      - cyphernodeappsnet
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    
  

  

  
  ##########################
  # BITCOIN                #
  ##########################

  bitcoin:
    image: cyphernode/bitcoin:v22.0
    command: $USER /.bitcoin/entrypoint.sh
    
    volumes:
      - "cn-dir/dist/cyphernode/bitcoin:/.bitcoin"
      - "cn-dir/dist/cyphernode/bitcoin/createWallets.sh:/.bitcoin/createWallets.sh:ro"
      - container_monitor:/container_monitor
    healthcheck:
      test: chown -R $USER /container_monitor && su-exec $USER sh -c 'bitcoin-cli echo && touch /container_monitor/bitcoin_ready || rm -f /container_monitor/bitcoin_ready'
      interval: 30s
      timeout: 10s
      retries: 10
    stop_grace_period: 30s
    networks:
      - cyphernodenet
    
    depends_on:
      - tor
    
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    
  

  ##########################
  # PROXY                  #
  ##########################

  proxy:
    image: cyphernode/proxy:v0.9.0-dev-local
    command: $USER ./startproxy.sh
    env_file:
      - .env/proxy.env 
    
    volumes:
      - "cn-dir/dist/cyphernode/logs:/cnlogs"
      - "cn-dir/dist/cyphernode/proxy:/proxy/db"
      
      
      - "cn-dir/dist/cyphernode/otsclient:/proxy/otsfiles"
      
      
      - "cn-dir/dist/cyphernode/tor:/proxy/tor"
      
      - container_monitor:/container_monitor
    healthcheck:
      test: chown -R $USER /container_monitor && su-exec $USER sh -c 'curl localhost:8888/helloworld && touch /container_monitor/proxy_ready || rm -f /container_monitor/proxy_ready'
      interval: 30s
      timeout: 10s
      retries: 10
    stop_grace_period: 30s
    networks:
      - cyphernodenet
    depends_on:
      - postgres
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    

  ##########################
  # PROXYCRON              #
  ##########################

  proxycron:
    image: cyphernode/proxycron:v0.9.0-dev-local
    env_file:
      - .env/proxycron.env
    networks:
      - cyphernodenet
    depends_on:
      - proxy
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    

  ##########################
  # BROKER                 #
  ##########################

  broker:
    image: eclipse-mosquitto:1.6-openssl
    networks:
      - cyphernodenet
      - cyphernodeappsnet
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    

  ##########################
  # NOTIFIER               #
  ##########################

  notifier:
    image: cyphernode/notifier:v0.9.0-dev-local
    command: $USER ./startnotifier.sh
    
    env_file:
      - .env/notifier.env
    
    volumes:
      - "cn-dir/dist/cyphernode/logs:/cnlogs"
    networks:
      - cyphernodenet
      - cyphernodeappsnet
    depends_on:
      - broker
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    

  ##########################
  # PYCOIN                 #
  ##########################

  pycoin:
    image: cyphernode/pycoin:v0.9.0-dev-local
    command: $USER ./startpycoin.sh
    env_file:
      - .env/pycoin.env
    
    volumes:
      - "cn-dir/dist/cyphernode/logs:/cnlogs"
    networks:
      - cyphernodenet
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    

  
  ##########################
  # OTSCLIENT              #
  ##########################

  otsclient:
    image: cyphernode/otsclient:v0.9.0-dev-local
    command: $USER /script/startotsclient.sh
    env_file:
      - .env/otsclient.env
    volumes:
      - "cn-dir/dist/cyphernode/logs:/cnlogs"
      - "cn-dir/dist/cyphernode/otsclient:/otsfiles"
      - "cn-dir/dist/cyphernode/bitcoin/bitcoin-client.conf:/.bitcoin/bitcoin.conf:ro"
    networks:
      - cyphernodenet
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    
  

  ##########################
  # GATEKEEPER             #
  ##########################

  gatekeeper:
    # HTTP authentication API gate
    image: cyphernode/gatekeeper:v0.9.0-dev-local
    command: $USER
    env_file:
      - .env/gatekeeper.env
    
    volumes:
      - "cn-dir/dist/cyphernode/logs:/cnlogs"
      - "cn-dir/dist/cyphernode/gatekeeper/certs:/etc/ssl/certs:ro"
      - "cn-dir/dist/cyphernode/gatekeeper/private:/etc/ssl/private:ro"
      - "cn-dir/dist/cyphernode/gatekeeper/keys.properties:/etc/nginx/conf.d/keys.properties"
      - "cn-dir/dist/cyphernode/gatekeeper/api.properties:/etc/nginx/conf.d/api.properties"
      - "cn-dir/dist/cyphernode/gatekeeper/default.conf:/etc/nginx/conf.d/default.conf"
      - "cn-dir/dist/cyphernode/gatekeeper/htpasswd:/etc/nginx/conf.d/status/htpasswd"
      - "cn-dir/dist/cyphernode/gatekeeper/installation.json:/etc/nginx/conf.d/s/stats/installation.json"
      - "cn-dir/dist/cyphernode/gatekeeper/client.7z:/etc/nginx/conf.d/s/stats/client.7z"
      - "cn-dir/dist/cyphernode/gatekeeper/config.7z:/etc/nginx/conf.d/s/stats/config.7z"
      - container_monitor:/container_monitor
    networks:
      - cyphernodenet
      - cyphernodeappsnet
    depends_on:
      - proxy
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    

  ##########################
  # TRAEFIK                #
  ##########################

  traefik:
    image: traefik:v1.7.9-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "cn-dir/dist/cyphernode/traefik/traefik.toml:/traefik.toml:ro"
      - "cn-dir/dist/cyphernode/traefik/acme.json:/acme.json"
      - "cn-dir/dist/cyphernode/traefik/htpasswd:/htpasswd/htpasswd:ro"
    networks:
      - cyphernodeappsnet
    depends_on:
      - gatekeeper
    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.io.cyphernode == true
      restart_policy:
        condition: "any"
        delay: 1s
      update_config:
        parallelism: 1
    

volumes:
  container_monitor:

networks:
  cyphernodenet:
    external: true
  cyphernodeappsnet:
    external: true
